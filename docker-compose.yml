version: '3'
services:
  authservice:
    image: auth-service
    build:
      context: ${PROJECT_PATH}/auth-service
      dockerfile: ${PROJECT_PATH}/auth-service/Dockerfile
    ports:
      - "8089:8089"
    restart: always
    depends_on:
      - mypostgres
    environment:
      - SPRING_DATASOURCE_URL=${DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - ${PROJECT_PATH}/log:/log
    networks:
      - spice-app-db-network    
       
  userservice:
    image: user-service
    build:
      context: ${PROJECT_PATH}/user-service
      dockerfile: ${PROJECT_PATH}/user-service/Dockerfile
    ports:
      - "8085:8085"
    restart: always
    depends_on:
      - mypostgres
    environment:
      - SPRING_DATASOURCE_URL=${DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - ${PROJECT_PATH}/log:/log
    networks:
      - spice-app-db-network

  notificationservice:
    image: notification-service
    build:
      context: ${NOTIFICATION_PROJECT_PATH}/notification-service
      dockerfile: ${NOTIFICATION_PROJECT_PATH}/notification-service/Dockerfile
    ports:
      - "8084:8084"
    restart: always
    depends_on:
      - mypostgres
    environment:
      - SPRING_DATASOURCE_URL=${DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - spice-app-db-network
      
  adminservice:
    image: admin-service
    build:
      context: ${PROJECT_PATH}/admin-service
      dockerfile: ${PROJECT_PATH}/admin-service/Dockerfile
    ports:
      - "8086:8086"
    restart: always
    depends_on:
      - mypostgres
    environment:
      - SPRING_DATASOURCE_URL=${DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - spice-app-db-network

  spiceservice:
    image: spice-service
    build:
      context: ${PROJECT_PATH}/spice-service
      dockerfile: ${PROJECT_PATH}/spice-service/Dockerfile
    ports:
      - "8087:8087"
    restart: always
    depends_on:
      - mypostgres
    environment:
      - SPRING_DATASOURCE_URL=${DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - spice-app-db-network

  servicediscovery:
    image: eureka-server
    build:
      context: ${PROJECT_PATH}/servicediscovery
      dockerfile: ${PROJECT_PATH}/servicediscovery/Dockerfile
    ports:
      - "8761:8761"
    restart: always
    networks:
      - spice-app-db-network
      
  mypostgres:
    image: postgres
    restart: always
    ports:
     - "5432:5432"
    environment:
     - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
     - POSTGRES_USER=${DATABASE_USERNAME}
     - POSTGRES_DB=${DATABASE_NAME}
    networks:
      - spice-app-db-network
      
  gatewayservice:
    image: gateway-service
    build:
      context: ${PROJECT_PATH}/gateway-service
      dockerfile: ${PROJECT_PATH}/gateway-service/Dockerfile
    ports:
      - "8762:8762"
    restart: always
    networks:
      - spice-app-db-network
      
networks:
  spice-app-db-network:
volumes:
  mypostgres:
    driver: local